version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"
    container_name: zookeeper
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "graphene-prometheus:1:1,graphene-influxdb:1:1,graphene-custom:1:1"
    container_name: kafka
  cassandra:
    image: cassandra:3.11.6
    ports:
      - 7000:7000
      - 7199:7199
      - 9042:9042
      - 9160:9160
    volumes:
      - ./.docker/cassandra:/var/lib/cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: metric
      CASSANDRA_LISTEN_ADDRESS: 127.0.0.1
    container_name: cassandra
  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra:3.11.6
    depends_on:
      - cassandra
    volumes:
      - ./infra/cassandra/3.x/local/metric.cql:/metric.cql
      - ./infra/cassandra/3.x/local/metric_offset.cql:/metric_offset.cql
    command: /bin/bash -c "sleep 60 && echo loading cassandra keyspace && cqlsh cassandra -f /metric_offset.cql && cqlsh cassandra -f /metric.cql"
  elasticsearch:
    image: elasticsearch:6.7.1
    volumes:
      - ./infra/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: "single-node"
    container_name: elasticsearch
  cerebro:
    image: lmenezes/cerebro:0.8.3
    ports:
      - 9000:9000
    container_name: cerebro
  grafana:
    image: grafana/grafana:6.3.5
    ports:
      - 80:3000
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    container_name: grafana
  telegraf:
    image: telegraf:1.14.3
    network_mode: "host"
    volumes:
      - ./infra/telegraf/conf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    container_name: telegraf
