version: '3'

services:
  graphene-writer:
    image: dark0096/graphene-writer:1.9.0
    network_mode: "host"
    environment:
      GRAPHENE_DATA_CASSANDRA_CLUSTER: '127.0.0.1'
      GRAPHENE_INDEX_ELASTICSEARCH_CLUSTER: '127.0.0.1'
      GRAPHENE_CARBON_HOST: 'graphene-writer'
      GRAPHENE_HEAP_OPTS: '-Xmx1G -Xms1G'
      GRAPHENE_INPUT_KAFKA_INFLUXDB_ENABLED: 'true'
      GRAPHENE_INPUT_KAFKA_INFLUXDB_BOOTSTRAP_SERVER: '127.0.0.1:9092'
      GRAPHENE_INPUT_KAFKA_INFLUXDB_CONSUMER_GROUP_ID: 'graphene-writer'
      GRAPHENE_INPUT_KAFKA_INFLUXDB_TOPICS: 'graphene-influxdb'
      GRAPHENE_INPUT_KAFKA_INFLUXDB_KEY_DESERIALIZER_CLASS: 'org.apache.kafka.common.serialization.StringDeserializer'
      GRAPHENE_INPUT_KAFKA_INFLUXDB_VALUE_DESERIALIZER_CLASS: 'com.graphene.writer.input.kafka.deserializer.InfluxDbDeserializer'
    container_name: graphene-writer
  graphene-reader:
    image: dark0096/graphene-reader:1.9.0
    ports:
      - 8080:8080
    links:
      - elasticsearch:elasticsearch
      - cassandra:cassandra
      - kafka:kafka
    environment:
      GRAPHENE_DATA_CASSANDRA_CLUSTER: 'cassandra'
      GRAPHENE_INDEX_ELASTICSEARCH_CLUSTER: 'elasticsearch'
      GRAPHENE_HEAP_OPTS: '-Xmx1G -Xms1G'
    container_name: graphene-reader
  cassandra:
    image: cassandra:3.11.6
    ports:
      - 7000:7000
      - 7199:7199
      - 9042:9042
      - 9160:9160
    volumes:
      - ./.docker/cassandra:/var/lib/cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: metric
    container_name: cassandra
  cassandra-load-keyspace:
    image: cassandra:3.11.6
    depends_on:
      - cassandra
    volumes:
      - ../infra/cassandra/3.x/local/metric.cql:/metric.cql
      - ../infra/cassandra/3.x/local/metric_offset.cql:/metric_offset.cql
    command: /bin/bash -c "sleep 60 && echo loading cassandra keyspace && cqlsh cassandra -f /metric_offset.cql && cqlsh cassandra -f /metric.cql"
    container_name: cassandra-load-keyspace
  elasticsearch:
    image: elasticsearch:6.7.1
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: "single-node"
    container_name: elasticsearch
  cerebro:
    image: lmenezes/cerebro:0.8.3
    ports:
      - 9000:9000
    container_name: cerebro
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "graphene-prometheus:1:1,graphene-influxdb:1:1,graphene-custom:1:1"
    container_name: kafka
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"
    container_name: zookeeper
  grafana:
    image: grafana/grafana:6.3.5
    ports:
      - 80:3000
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
    container_name: grafana
  telegraf:
    image: telegraf:1.14.3
    network_mode: "host"
    volumes:
      - ../infra/telegraf/conf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    container_name: telegraf
