debug: true

logging:
  level:
    org.springframework: {{getv "/log/level" "INFO"}}
    com.graphene: {{getv "/log/level" "INFO"}}

graphene:
  writer:
    blacklist:
      'test':
        - '^xxx_sum.*\.system\..*'
    input:
      kafka:
        enabled: {{getv "/input/kafka/enabled" "false"}}
        bootstrapServer: "{{getv "/input/kafka/bootstrap/server" "localhost:9092"}}"
        consumerGroupId: "{{getv "/input/kafka/consumer/group/id" "graphene-writer"}}"
        pollIntervalMs: {{getv "/input/kafka/poll/interval/ms" "500"}}
        maxPollRecords: {{getv "/input/kafka/max/poll/records" "1000"}}
        topics: "{{getv "/input/kafka/topics" "graphene"}}"
        keyDeserializerClass: "{{getv "/input/kafka/key/deserializer/class" "org.apache.kafka.common.serialization.StringDeserializer"}}"
        valueDeserializerClass: "{{getv "/input/kafka/value/deserializer/class" "com.graphene.writer.input.kafka.deserializer.PrometheusDeserializer"}}"
      graphite.carbon:
        bind: "0.0.0.0"
        port: 2003
        rollup: 60
        {{if exists "/input/route/host"}}
        route:
          host: "{{getv "/input/route/host" "127.0.0.1"}}"
          port: "{{getv "/input/route/port" "2003"}}"
        {{end}}
    store:
      key:
        handlers:
          tag-based-key-store-handler:
            tenant: none
            rotation:
              strategy: "timeBasedRotation"
              period: "1w"
            handler:
              type: "TagBasedKeyStoreHandler"
              property:
                clusterName: "{{getv "/index/elasticsearch/cluster/name" "metric"}}"
                cluster: "{{getv "/index/elasticsearch/cluster" "elasticsearch"}}"
                port: 9200
                templateIndexPattern: "tag-based-key-path*"
                index: "tag-based-key-path"
                type: "path"
                bulk:
                  actions: 10000
                  interval: 500
      data:
        handlers:
          simple-data-store-handler:
            type: "SimpleDataStoreHandler"
            tenant: NONE
            ttl: {{getv "/data/cassandra/ttl" "604800"}}
            keyspace: "{{getv "/data/cassandra/keyspace" "metric"}}"
            columnFamily: "{{getv "/data/cassandra/columnFamily" "metric"}}"
            bucketSize: 0
            property:
              cluster: "{{getv "/data/cassandra/cluster" "127.0.0.1"}}"
              port: 9042
              userName: "{{getv "/data/cassandra/userName" "cassandra"}}"
              userPassword: "{{getv "/data/cassandra/userPassword" "cassandra"}}"
              maxConnections: {{getv "/data/cassandra/max/connections" "2048"}}
              readTimeout: 10
              connectTimeout: 10
              maxRequests: {{getv "/data/cassandra/max/connections" "128"}}
              maxQueueSize: 4194304
              loadBalancingPolicyName: "TokenDcAwareRoundRobinPolicy"
              consistencyLevel: "{{getv "/data/cassandra/consistencylevel" "ONE"}}"
              protocolVersion: "V4"
          offset-based-data-store-handler:
            type: "OffsetBasedDataStoreHandler"
            tenant: NONE
            ttl: {{getv "/data/cassandra/ttl" "604800"}}
            keyspace: "{{getv "/data/cassandra/columnFamily" "metric_offset"}}"
            columnFamily: "{{getv "/data/cassandra/columnFamily" "metric"}}"
            bucketSize: {{getv "/data/cassandra/offset/bucketsize" "604800"}}
            property:
              cluster: "{{getv "/data/cassandra/cluster" "127.0.0.1"}}"
              port: 9042
              userName: "{{getv "/data/cassandra/userName" "cassandra"}}"
              userPassword: "{{getv "/data/cassandra/userPassword" "cassandra"}}"
              maxConnections: {{getv "/data/cassandra/max/connections" "2048"}}
              readTimeout: 10
              connectTimeout: 10
              maxRequests: {{getv "/data/cassandra/max/connections" "128"}}
              maxQueueSize: 4194304
              loadBalancingPolicyName: "TokenDcAwareRoundRobinPolicy"
              consistencyLevel: "{{getv "/data/cassandra/consistencylevel" "ONE"}}"
              protocolVersion: "V4"
    stats:
      interval: 60
      tenant: "NONE"
      hostname: "{{getenv "HOST_NAME" "localhost"}}"
      log: true
server:
  port: 8081
